<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ucss.elementary.tnwn.mapper.tnwn.TLLoginMapper" >
  <resultMap id="BaseResultMap" type="com.ucss.elementary.tnwn.model.database.TLLogin" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="USER_ID" property="userId" jdbcType="DECIMAL" />
    <result column="APPCODE" property="appcode" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="IMEI" property="imei" jdbcType="VARCHAR" />
    <result column="IP" property="ip" jdbcType="VARCHAR" />
    <result column="SUCCESS" property="success" jdbcType="DECIMAL" />
    <result column="SOURCE" property="source" jdbcType="DECIMAL" />
    <result column="LOGINTYPE" property="logintype" jdbcType="DECIMAL" />
    <result column="LOGINTIME" property="logintime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, USER_ID, APPCODE, PHONE, IMEI, IP, SUCCESS, SOURCE, LOGINTYPE, LOGINTIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ucss.elementary.tnwn.model.database.TLLoginExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_L_LOGIN
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from T_L_LOGIN
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from T_L_LOGIN
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.ucss.elementary.tnwn.model.database.TLLoginExample" >
    delete from T_L_LOGIN
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ucss.elementary.tnwn.model.database.TLLogin" >
    insert into T_L_LOGIN (ID, USER_ID, APPCODE, 
      PHONE, IMEI, IP, SUCCESS, 
      SOURCE, LOGINTYPE, LOGINTIME
      )
    values (#{id,jdbcType=DECIMAL}, #{userId,jdbcType=DECIMAL}, #{appcode,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{imei,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{success,jdbcType=DECIMAL}, 
      #{source,jdbcType=DECIMAL}, #{logintype,jdbcType=DECIMAL}, #{logintime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ucss.elementary.tnwn.model.database.TLLogin" >
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT SEQ_LOGINLOG.NEXTVAL AS id FROM DUAL
    </selectKey>
    insert into T_L_LOGIN
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="appcode != null" >
        APPCODE,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
      <if test="imei != null" >
        IMEI,
      </if>
      <if test="ip != null" >
        IP,
      </if>
      <if test="success != null" >
        SUCCESS,
      </if>
      <if test="source != null" >
        SOURCE,
      </if>
      <if test="logintype != null" >
        LOGINTYPE,
      </if>
      <if test="logintime != null" >
        LOGINTIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=DECIMAL},
      </if>
      <if test="appcode != null" >
        #{appcode,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="imei != null" >
        #{imei,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="success != null" >
        #{success,jdbcType=DECIMAL},
      </if>
      <if test="source != null" >
        #{source,jdbcType=DECIMAL},
      </if>
      <if test="logintype != null" >
        #{logintype,jdbcType=DECIMAL},
      </if>
      <if test="logintime != null" >
        #{logintime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ucss.elementary.tnwn.model.database.TLLoginExample" resultType="java.lang.Integer" >
    select count(*) from T_L_LOGIN
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update T_L_LOGIN
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=DECIMAL},
      </if>
      <if test="record.appcode != null" >
        APPCODE = #{record.appcode,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.imei != null" >
        IMEI = #{record.imei,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null" >
        IP = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.success != null" >
        SUCCESS = #{record.success,jdbcType=DECIMAL},
      </if>
      <if test="record.source != null" >
        SOURCE = #{record.source,jdbcType=DECIMAL},
      </if>
      <if test="record.logintype != null" >
        LOGINTYPE = #{record.logintype,jdbcType=DECIMAL},
      </if>
      <if test="record.logintime != null" >
        LOGINTIME = #{record.logintime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update T_L_LOGIN
    set ID = #{record.id,jdbcType=DECIMAL},
      USER_ID = #{record.userId,jdbcType=DECIMAL},
      APPCODE = #{record.appcode,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      IMEI = #{record.imei,jdbcType=VARCHAR},
      IP = #{record.ip,jdbcType=VARCHAR},
      SUCCESS = #{record.success,jdbcType=DECIMAL},
      SOURCE = #{record.source,jdbcType=DECIMAL},
      LOGINTYPE = #{record.logintype,jdbcType=DECIMAL},
      LOGINTIME = #{record.logintime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ucss.elementary.tnwn.model.database.TLLogin" >
    update T_L_LOGIN
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=DECIMAL},
      </if>
      <if test="appcode != null" >
        APPCODE = #{appcode,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="imei != null" >
        IMEI = #{imei,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        IP = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="success != null" >
        SUCCESS = #{success,jdbcType=DECIMAL},
      </if>
      <if test="source != null" >
        SOURCE = #{source,jdbcType=DECIMAL},
      </if>
      <if test="logintype != null" >
        LOGINTYPE = #{logintype,jdbcType=DECIMAL},
      </if>
      <if test="logintime != null" >
        LOGINTIME = #{logintime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ucss.elementary.tnwn.model.database.TLLogin" >
    update T_L_LOGIN
    set USER_ID = #{userId,jdbcType=DECIMAL},
      APPCODE = #{appcode,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      IMEI = #{imei,jdbcType=VARCHAR},
      IP = #{ip,jdbcType=VARCHAR},
      SUCCESS = #{success,jdbcType=DECIMAL},
      SOURCE = #{source,jdbcType=DECIMAL},
      LOGINTYPE = #{logintype,jdbcType=DECIMAL},
      LOGINTIME = #{logintime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
</mapper>